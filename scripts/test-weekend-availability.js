/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ
 * –ó–∞–ø—É—Å–∫: node scripts/test-weekend-availability.js
 */

const axios = require("axios");

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const API_BASE_URL =
  process.env.EXPO_PUBLIC_API_URL ||
  "https://api-production-4ce8.up.railway.app";
const API_PREFIX = "/api";

// –°–æ–∑–¥–∞–µ–º axios instance
const apiClient = axios.create({
  baseURL: `${API_BASE_URL}${API_PREFIX}`,
  timeout: 10000,
  headers: {
    "Content-Type": "application/json",
  },
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
async function testAvailability(restaurantId, date) {
  console.log(
    `\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–ª—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ ${restaurantId} –Ω–∞ –¥–∞—Ç—É ${date}`
  );

  try {
    const startTime = Date.now();
    const response = await apiClient.get(
      `/restaurant/restaurants/${restaurantId}/availability/?date=${date}`
    );
    const endTime = Date.now();

    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –∑–∞ ${endTime - startTime}ms:`);

    const data = response.data.data || response.data;

    if (data && typeof data === "object") {
      console.log("üìã –î–∞–Ω–Ω—ã–µ –æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:");
      console.log(`   ‚Ä¢ ID —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞: ${data.restaurant_id}`);
      console.log(`   ‚Ä¢ –î–∞—Ç–∞: ${data.date}`);
      console.log(`   ‚Ä¢ –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ${data.day_of_week}`);
      console.log(
        `   ‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${data.opening_time} - ${data.closing_time}`
      );
      console.log(
        `   ‚Ä¢ –î–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤: ${data.available_slots?.length || 0}`
      );

      if (data.available_slots && Array.isArray(data.available_slots)) {
        console.log(
          `   ‚Ä¢ –ü–µ—Ä–≤—ã–µ —Å–ª–æ—Ç—ã: ${data.available_slots.slice(0, 10).join(", ")}`
        );
      }
    }

    return data;
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:`);
    console.log(`   ‚Ä¢ HTTP —Å—Ç–∞—Ç—É—Å: ${error.response?.status || "N/A"}`);
    console.log(
      `   ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–µ: ${error.response?.data?.message || error.message}`
    );

    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞—Ç –¥–ª—è –≤—ã—Ö–æ–¥–Ω—ã—Ö
function generateWeekendDates() {
  const dates = [];
  const today = new Date();

  // –ò—â–µ–º –±–ª–∏–∂–∞–π—à–∏–µ —Å—É–±–±–æ—Ç—É –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
  for (let i = 0; i < 14; i++) {
    const date = new Date(today);
    date.setDate(today.getDate() + i);

    const dayOfWeek = date.getDay(); // 0 = Sunday, 6 = Saturday
    if (dayOfWeek === 6 || dayOfWeek === 0) {
      // Saturday or Sunday
      dates.push({
        date: date.toISOString().split("T")[0],
        dayName: dayOfWeek === 6 ? "–°—É–±–±–æ—Ç–∞" : "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ",
      });
    }

    if (dates.length >= 4) break; // –ü–æ–ª—É—á–∞–µ–º 4 –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–Ω—è
  }

  return dates;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function runWeekendTests() {
  console.log("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ");
  console.log(`üì° –ë–∞–∑–æ–≤—ã–π URL: ${API_BASE_URL}${API_PREFIX}`);

  // ID —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç–µ—Å—Ç–∞
  const restaurantId = "aecbde99-a4c0-4859-b9e5-6ec8f42b40a2";

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞—Ç—ã –¥–ª—è –≤—ã—Ö–æ–¥–Ω—ã—Ö
  const weekendDates = generateWeekendDates();
  console.log(`üìÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞—Ç–∞—Ö:`);
  weekendDates.forEach(({ date, dayName }) => {
    console.log(`   ‚Ä¢ ${date} (${dayName})`);
  });

  console.log(`\nüéØ –ó–∞–ø—É—Å–∫–∞–µ–º ${weekendDates.length} —Ç–µ—Å—Ç–æ–≤...`);

  for (const { date, dayName } of weekendDates) {
    console.log(`\n${"=".repeat(60)}`);
    console.log(`üìÖ –î–∞—Ç–∞: ${date} (${dayName})`);

    await testAvailability(restaurantId, date);

    // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise((resolve) => setTimeout(resolve, 500));
  }

  console.log(`\n${"=".repeat(60)}`);
  console.log("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã—Ö–æ–¥–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!");
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if (require.main === module) {
  runWeekendTests().catch((error) => {
    console.error("üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error.message);
    process.exit(1);
  });
}
